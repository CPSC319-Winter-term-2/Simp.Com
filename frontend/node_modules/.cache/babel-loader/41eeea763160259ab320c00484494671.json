{"ast":null,"code":"var _jsxFileName = \"/Users/isabella/Documents/CPSC/Simp.Com/frontend/src/component/chat/TestChat.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:8888\");\n\nfunction TestChat() {\n  _s();\n\n  // Messages States\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState([]);\n  const [room, setRoom] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n\n  const joinRoom = () => {\n    if (room !== \"\") {\n      socket.emit(\"join_room\", room);\n    }\n  };\n\n  const handleOnClick = () => {\n    if (message !== \"\") {\n      socket.emit(\"send_message\", {\n        user,\n        message,\n        room\n      });\n      let tempEle = {\n        user: user,\n        message: message\n      };\n      setMessageReceived(oldArray => [...oldArray, tempEle]);\n    }\n  };\n\n  const handleUser = () => {\n    socket.emit(\"user\", {\n      user\n    });\n  };\n\n  useEffect(() => {\n    // socket.on(\"user-connected\", (name) => {\n    //   //   userName = name.user;\n    // });\n    socket.on(\"receive_message\", data => {\n      let tempEle = {\n        user: data.userName,\n        message: data.message\n      };\n      setMessageReceived(oldArray => [...oldArray, tempEle]);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Room Number...\",\n      onChange: event => {\n        setRoom(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: joinRoom,\n      children: \" Join Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"User\",\n      onChange: event => {\n        setUser(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUser,\n      children: \" Enter Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"msg\",\n      onChange: e => {\n        setMessage(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOnClick,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Message:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), messageReceived.map(i => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [i.user, \":\", i.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TestChat, \"aXFUvHvKAVyCofBapFtZIqvBIps=\");\n\n_c = TestChat;\nexport default TestChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestChat\");","map":{"version":3,"names":["React","io","useEffect","useState","socket","connect","TestChat","message","setMessage","messageReceived","setMessageReceived","room","setRoom","user","setUser","joinRoom","emit","handleOnClick","tempEle","oldArray","handleUser","on","data","userName","event","target","value","e","map","i"],"sources":["/Users/isabella/Documents/CPSC/Simp.Com/frontend/src/component/chat/TestChat.js"],"sourcesContent":["import React from \"react\";\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\n\nconst socket = io.connect(\"http://localhost:8888\");\n\nfunction TestChat() {\n  // Messages States\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState([]);\n  const [room, setRoom] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const joinRoom = () => {\n    if (room !== \"\") {\n      socket.emit(\"join_room\", room);\n    }\n  };\n  const handleOnClick = () => {\n    if (message !== \"\") {\n      socket.emit(\"send_message\", { user, message, room });\n      let tempEle = {\n        user: user,\n        message: message,\n      };\n      setMessageReceived((oldArray) => [...oldArray, tempEle]);\n    }\n  };\n  const handleUser = () => {\n    socket.emit(\"user\", { user });\n  };\n  useEffect(() => {\n    // socket.on(\"user-connected\", (name) => {\n    //   //   userName = name.user;\n    // });\n\n    socket.on(\"receive_message\", (data) => {\n      let tempEle = {\n        user: data.userName,\n        message: data.message,\n      };\n      setMessageReceived((oldArray) => [...oldArray, tempEle]);\n    });\n  }, [socket]);\n\n  return (\n    <div>\n      <input\n        placeholder=\"Room Number...\"\n        onChange={(event) => {\n          setRoom(event.target.value);\n        }}\n      />\n      <button onClick={joinRoom}> Join Room</button>\n      <input\n        placeholder=\"User\"\n        onChange={(event) => {\n          setUser(event.target.value);\n        }}\n      />\n      <button onClick={handleUser}> Enter Name</button>\n      <input\n        placeholder=\"msg\"\n        onChange={(e) => {\n          setMessage(e.target.value);\n        }}\n      />\n      <button onClick={handleOnClick}>Send</button>\n      <h1> Message:</h1>\n      {messageReceived.map((i) => {\n        return (\n          <div>\n            <p>\n              {i.user}:{i.message}\n            </p>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default TestChat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}