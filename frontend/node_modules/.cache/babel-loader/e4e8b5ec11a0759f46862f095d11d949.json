{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchAPI } from \"../api/client\";\nimport { current } from \"@reduxjs/toolkit\";\nexport const postNewProduct = createAsyncThunk('/product/post', async function (data) {\n  let features = data.features;\n  let descriptions = Object.entries(features).map(_ref => {\n    let [key, val] = _ref;\n    return {\n      title: key,\n      content: val\n    };\n  });\n  data.descriptions = descriptions;\n  return fetchAPI('POST', data, {}, 'products').then(response => response.text());\n});\nexport const updateProduct = createAsyncThunk('/product/patch', async function (data) {\n  let features = data.features;\n  let descriptions = Object.entries(features).map(_ref2 => {\n    let [key, val] = _ref2;\n    return {\n      title: key,\n      content: val\n    };\n  });\n  data.descriptions = descriptions;\n  return fetchAPI('PATCH', data, {}, 'products').then(response => response.text());\n});\n/**\n * Product Slice is only used for the editing page.\n */\n\nconst INITIAL_STATE = {\n  name: \"\",\n  title: \"\",\n  price: 0,\n  tags: [],\n  features: {},\n  images: []\n};\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState: INITIAL_STATE,\n  reducers: {\n    setName: (state, action) => {\n      state.name = action.payload;\n    },\n    setTitle: (state, action) => {\n      state.title = action.payload;\n    },\n    addTag: (state, action) => {\n      state.tags.push(action.payload);\n    },\n    addFeature: (state, action) => {\n      state.features[action.payload.title] = action.payload.description;\n    },\n    loadProduct: (state, action) => {\n      let product = action.payload;\n      state.name = product.name;\n      state.features = product.features;\n      state.tags = product.tags;\n      state.title = product.title;\n      state.price = product.price;\n    },\n    addImage: (state, action) => {\n      state.images.push({\n        id: state.images.length,\n        src: action.payload\n      });\n      console.log(current(state));\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(postNewProduct.fulfilled, function (state, action) {\n      console.log(\"save succeeded\");\n    }).addCase(updateProduct.fulfilled, function (state, action) {\n      console.log(\"update succeeded\");\n    });\n  }\n}); // Export Setters\n\nexport const {\n  setName,\n  setTitle,\n  addTag,\n  addFeature,\n  loadProduct,\n  addImage\n} = productSlice.actions; // ++++++++++++++++ Getters ++++++++++++++++++++ //\n\nexport const getTags = state => state.products.tags;\nexport const getFeatures = state => state.products.features;\nexport const getName = state => state.products.name;\nexport const getTitle = state => state.products.title;\nexport const getBufferProduct = state => {\n  return {\n    title: getTitle(state),\n    tags: getTags(state),\n    features: getFeatures(state),\n    name: getName(state),\n    price: state.products.price\n  };\n};\nexport const getImages = state => state.products.images;\nexport default productSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchAPI","current","postNewProduct","data","features","descriptions","Object","entries","map","key","val","title","content","then","response","text","updateProduct","INITIAL_STATE","name","price","tags","images","productSlice","initialState","reducers","setName","state","action","payload","setTitle","addTag","push","addFeature","description","loadProduct","product","addImage","id","length","src","console","log","extraReducers","builder","addCase","fulfilled","actions","getTags","products","getFeatures","getName","getTitle","getBufferProduct","getImages","reducer"],"sources":["/Users/isabella/Documents/CPSC/Simp.Com/frontend/src/controller/productSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchAPI } from \"../api/client\";\nimport { current } from \"@reduxjs/toolkit\";\n\nexport const postNewProduct = createAsyncThunk('/product/post', async function(data) {\n  let features = data.features;\n  let descriptions = Object.entries(features).map(([key, val]) => {return {title: key, content: val}})\n  data.descriptions = descriptions;\n  return fetchAPI('POST', data, {}, 'products').then(response => response.text());\n})\n\nexport const updateProduct = createAsyncThunk('/product/patch', async function(data) {\n  let features = data.features;\n  let descriptions = Object.entries(features).map(([key, val]) => {return {title: key, content: val}})\n  data.descriptions = descriptions;\n  return fetchAPI('PATCH', data, {}, 'products').then(response => response.text());\n})\n\n/**\n * Product Slice is only used for the editing page.\n */\n\n const INITIAL_STATE = {\n  name: \"\",\n  title: \"\",\n  price: 0,\n  tags: [],\n  features: {},\n  images:[]\n}\n\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState: INITIAL_STATE,\n  reducers: {\n    setName: (state, action) => {state.name = action.payload},\n    setTitle: (state, action) => {state.title = action.payload},\n    addTag: (state, action) => {state.tags.push(action.payload)},\n    addFeature: (state, action) => {state.features[action.payload.title] = action.payload.description},\n    loadProduct: (state, action) => {\n      let product = action.payload;\n      state.name = product.name;\n      state.features = product.features;\n      state.tags = product.tags;\n      state.title = product.title;\n      state.price = product.price;\n    },\n    addImage: (state,action) => {\n      state.images.push({id:state.images.length, src:action.payload});\n      console.log(current(state))\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n    .addCase(postNewProduct.fulfilled, function(state, action) {\n      console.log(\"save succeeded\");\n    })\n    .addCase(updateProduct.fulfilled, function(state, action) {\n      console.log(\"update succeeded\");\n    })\n  }\n});\n\n// Export Setters\nexport const {setName, setTitle, addTag, addFeature, loadProduct,addImage} =\n  productSlice.actions;\n\n// ++++++++++++++++ Getters ++++++++++++++++++++ //\nexport const getTags = (state) => state.products.tags;\nexport const getFeatures = (state) => state.products.features;\nexport const getName = (state) => state.products.name;\nexport const getTitle = (state) => state.products.title;\nexport const getBufferProduct = (state) => {\n  return {\n    title: getTitle(state),\n    tags: getTags(state),\n    features: getFeatures(state),\n    name: getName(state),\n    price: state.products.price\n  };\n};\nexport const getImages = (state) => state.products.images;\n\n\nexport default productSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}