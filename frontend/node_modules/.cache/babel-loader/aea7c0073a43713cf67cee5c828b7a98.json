{"ast":null,"code":"var _jsxFileName = \"/Users/isabella/Documents/CPSC/Simp.Com/frontend/src/component/orders/SellerOrderTracking.js\",\n    _s = $RefreshSig$();\n\nimport { getModified, getOrderDetails } from \"../../controller/orderSlice\"; // MUI Components\n\nimport { Grid } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { Container } from \"@mui/system\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"../../css/orderTracking.css\";\nimport { changeStatusAsync, getOrderAsync } from '../cart/cartThunks';\nimport AlertPopup from \"./alertPopup\";\nimport { confirm } from \"react-confirm-box\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SellerOrderTracking(props) {\n  _s();\n\n  const [finalClickInfo, setFinalClickInfo] = useState(null);\n  let orders = useSelector(getOrderDetails);\n  var modified = useSelector(getModified);\n  const dispatch = useDispatch();\n  const options = {\n    labels: {\n      confirmable: \"Confirm\",\n      cancellable: \"Cancel\"\n    }\n  };\n\n  const handleOnCellClick = async (params, event) => {\n    event.preventDefault();\n    setFinalClickInfo(params.id);\n    renderPopUp(options, params);\n  };\n\n  const renderPopUp = async (options, params) => {\n    const result = await confirm(\"Are you sure?\", options);\n\n    if (result) {\n      dispatch(changeStatusAsync(params.id));\n      return;\n    }\n  };\n\n  useEffect(() => {\n    if (modified !== \"succeed\") {\n      dispatch(getOrderAsync());\n    }\n  }, [dispatch, modified]);\n  const columns = [{\n    field: \"uuid\",\n    headerName: \"Order Number\",\n    width: 130\n  }, {\n    field: \"products\",\n    headerName: \"Products\",\n    width: 450,\n    renderCell: products => /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: products.value.map((product, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", \"id: \", product.id, \" \", \"name: \", product.name]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    width: 130\n  }];\n  let extendedOrders = orders.map(order => ({ ...order,\n    id: order._id\n  }));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    className: \"dashboard\",\n    sx: {\n      bgcolor: '#F7F8FC'\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      rowSpacing: 5,\n      sx: {\n        marginLeft: \"8vw\",\n        marginTop: \"2vw\"\n      },\n      className: \"orderTrackingContent\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 10,\n        className: \"orderTrackingHeader\",\n        children: [\" \", \"Unprocessed Orders\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 10,\n        style: {\n          height: 400\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: extendedOrders.filter(order => order.status === \"Unprocessed\"),\n          columns: columns,\n          pageSize: 5,\n          rowsPerPageOptions: [5],\n          checkboxSelection: true,\n          onCellClick: handleOnCellClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 10,\n        className: \"orderTrackingHeader\",\n        children: [\" \", \"In Shipment Orders\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 10,\n        style: {\n          height: 400\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: extendedOrders.filter(order => order.status === \"Shipped\"),\n          columns: columns,\n          pageSize: 5,\n          rowsPerPageOptions: [5]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 10,\n        className: \"orderTrackingHeader\",\n        children: [\" \", \"Delivered Orders\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 10,\n        style: {\n          height: 400\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: extendedOrders.filter(order => order.status === \"Delivered\"),\n          columns: columns,\n          pageSize: 5,\n          rowsPerPageOptions: [5]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SellerOrderTracking, \"HacohGBWqjZpDfihpc2PDEFSPGw=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = SellerOrderTracking;\nexport default SellerOrderTracking;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellerOrderTracking\");","map":{"version":3,"names":["getModified","getOrderDetails","Grid","DataGrid","Container","React","useEffect","useState","useSelector","useDispatch","changeStatusAsync","getOrderAsync","AlertPopup","confirm","SellerOrderTracking","props","finalClickInfo","setFinalClickInfo","orders","modified","dispatch","options","labels","confirmable","cancellable","handleOnCellClick","params","event","preventDefault","id","renderPopUp","result","columns","field","headerName","width","renderCell","products","value","map","product","index","name","extendedOrders","order","_id","bgcolor","marginLeft","marginTop","height","filter","status"],"sources":["/Users/isabella/Documents/CPSC/Simp.Com/frontend/src/component/orders/SellerOrderTracking.js"],"sourcesContent":["import { getModified, getOrderDetails } from \"../../controller/orderSlice\";\n// MUI Components\nimport { Grid } from \"@mui/material\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport { Container } from \"@mui/system\";\n\nimport React, { useEffect,  useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"../../css/orderTracking.css\";\nimport { changeStatusAsync, getOrderAsync } from '../cart/cartThunks';\nimport AlertPopup from \"./alertPopup\";\nimport { confirm } from \"react-confirm-box\";\n\n\nfunction SellerOrderTracking(props) {\n  const [finalClickInfo, setFinalClickInfo] = useState(null);\n  let orders = useSelector(getOrderDetails);\n  var modified = useSelector(getModified);\n  const dispatch = useDispatch();\n\n  const options = {\n    labels: {\n      confirmable: \"Confirm\",\n      cancellable: \"Cancel\"\n    }\n  }\n\n  const handleOnCellClick = async (params, event) => {\n    event.preventDefault();\n    setFinalClickInfo(params.id);\n    renderPopUp(options,params)\n  };\n\n  const renderPopUp = async (options,params) => {\n    const result = await confirm(\"Are you sure?\", options);\n    if (result) {\n      dispatch(changeStatusAsync(params.id));\n      return;\n    }\n  };\n\n  useEffect(() => {\n    if (modified !== \"succeed\") {\n      dispatch(getOrderAsync());\n    }\n  }, [dispatch, modified]);\n\n\n  const columns = [\n    { field: \"uuid\", headerName: \"Order Number\", width: 130 },\n    {\n      field: \"products\",\n      headerName: \"Products\",\n      width: 450,\n      renderCell: (products) => (\n        <ul>\n          {products.value.map((product, index) => (\n            <li key={index}>\n              {\" \"}\n              id: {product.id}\n              {\" \"}\n              name: {product.name}\n            </li>\n          ))}\n        </ul>\n      ),\n    },\n    { field: \"status\", headerName: \"Status\", width: 130 },\n  ];\n\n  let extendedOrders = orders.map((order) => ({\n    ...order,\n    id: order._id\n  }))\n\n  return (\n    <Container maxWidth=\"xl\" className=\"dashboard\" sx={{ bgcolor: '#F7F8FC' }}>\n{/* \n      {popUpOpen &&\n        <div>\n          <AlertPopup\n            setOpen={setPopUpOpen}\n            // setConfirm = {setPopUpConfirm}\n          />\n        </div>\n      } */}\n\n      <Grid\n        container\n        rowSpacing={5}\n        sx={{ marginLeft: \"8vw\", marginTop: \"2vw\" }}\n        className=\"orderTrackingContent\"\n      >\n        <Grid item xs={10} className=\"orderTrackingHeader\">\n          {\" \"}\n          Unprocessed Orders\n        </Grid>\n        <Grid item xs={10} style={{ height: 400 }}>\n          <DataGrid\n            rows={extendedOrders.filter(order => order.status === \"Unprocessed\")}\n            columns={columns}\n            pageSize={5}\n            rowsPerPageOptions={[5]}\n            checkboxSelection\n            onCellClick={(handleOnCellClick)}\n          />\n        </Grid>\n\n        <Grid item xs={10} className=\"orderTrackingHeader\">\n          {\" \"}\n          In Shipment Orders\n        </Grid>\n        <Grid item xs={10} style={{ height: 400 }}>\n          <DataGrid\n            rows={extendedOrders.filter(order => order.status === \"Shipped\")}\n            columns={columns}\n            pageSize={5}\n            rowsPerPageOptions={[5]}\n          />\n        </Grid>\n\n        <Grid item xs={10} className=\"orderTrackingHeader\">\n          {\" \"}\n          Delivered Orders\n        </Grid>\n        <Grid item xs={10} style={{ height: 400 }}>\n          <DataGrid\n            rows={extendedOrders.filter(order => order.status === \"Delivered\")}\n            columns={columns}\n            pageSize={5}\n            rowsPerPageOptions={[5]}\n          />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default SellerOrderTracking;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}