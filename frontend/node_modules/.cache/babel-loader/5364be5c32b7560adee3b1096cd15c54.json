{"ast":null,"code":"var _jsxFileName = \"/Users/isabella/Documents/CPSC/Simp.Com/frontend/src/component/common/DragDrop.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useCallback, useState } from \"react\";\nimport Dropzone from './Dropzone';\nimport cuid from \"cuid\";\nimport { Box, Container } from \"@mui/system\";\nimport { getImages } from '../../controller/productSlice';\nimport { addImage } from \"../../controller/productSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DragDrop() {\n  _s();\n\n  let images = useSelector(getImages);\n  let dispatch = useDispatch();\n  const [imageBuffer, setImageBuffer] = useState([]);\n\n  const onDrop = file => {\n    console.log(file[0]);\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      setImageBuffer(prevState => [...prevState, {\n        id: images.length,\n        src: e.target.result\n      }]);\n      dispatch(addImage(e.target.result));\n    };\n\n    reader.readAsDataURL(file[0]);\n    return file[0];\n  }; // useCallback(acceptedFiles => {\n  //   acceptedFiles.map(file => {\n  //     const reader = new FileReader();\n  //     reader.onload = function(e) {\n  //       setImages(prevState => [\n  //         ...prevState,\n  //         { id: cuid(), src: e.target.result }\n  //       ]);\n  //     };\n  //     reader.readAsDataURL(file);\n  //     return file;\n  //   });\n  // }, []);\n\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Drag & Drop \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n      onDrop: onDrop,\n      accept: \"image/*\",\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DragDrop, \"VgfEexgii/+7dtTVNVf7Usfw8k4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = DragDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragDrop\");","map":{"version":3,"names":["useDispatch","useSelector","useCallback","useState","Dropzone","cuid","Box","Container","getImages","addImage","DragDrop","images","dispatch","imageBuffer","setImageBuffer","onDrop","file","console","log","reader","FileReader","onload","e","prevState","id","length","src","target","result","readAsDataURL"],"sources":["/Users/isabella/Documents/CPSC/Simp.Com/frontend/src/component/common/DragDrop.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { useCallback, useState } from \"react\";\nimport Dropzone from './Dropzone';\nimport cuid from \"cuid\";\nimport { Box, Container } from \"@mui/system\";\nimport { getImages } from '../../controller/productSlice';\nimport  {addImage} from \"../../controller/productSlice\";\n\nexport default function DragDrop() {\n    let images = useSelector(getImages);\n  \n    let dispatch = useDispatch();\n\n    const [imageBuffer, setImageBuffer] = useState([]);\n\n    const onDrop = (file) => {\n      console.log(file[0]);\n      const reader = new FileReader();\n      reader.onload = function (e) {\n        setImageBuffer((prevState) => [\n          ...prevState,\n          {id:images.length, src:e.target.result},\n        ]);\n        dispatch(addImage(e.target.result));\n      }\n      reader.readAsDataURL(file[0]);\n      return file[0];\n    }\n  // useCallback(acceptedFiles => {\n  //   acceptedFiles.map(file => {\n  //     const reader = new FileReader();\n  //     reader.onload = function(e) {\n  //       setImages(prevState => [\n  //         ...prevState,\n  //         { id: cuid(), src: e.target.result }\n  //       ]);\n  //     };\n  //     reader.readAsDataURL(file);\n  //     return file;\n  //   });\n  // }, []);\n      return (\n        <Box> \n            <h1> Drag & Drop </h1>\n            <Dropzone onDrop = {onDrop} accept={\"image/*\"} > </Dropzone>\n        </Box>\n      )\n}"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,aAA/B;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,QAAT,QAAwB,+BAAxB;;AAEA,eAAe,SAASC,QAAT,GAAoB;EAAA;;EAC/B,IAAIC,MAAM,GAAGV,WAAW,CAACO,SAAD,CAAxB;EAEA,IAAII,QAAQ,GAAGZ,WAAW,EAA1B;EAEA,MAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;;EAEA,MAAMY,MAAM,GAAIC,IAAD,IAAU;IACvBC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,CAAD,CAAhB;IACA,MAAMG,MAAM,GAAG,IAAIC,UAAJ,EAAf;;IACAD,MAAM,CAACE,MAAP,GAAgB,UAAUC,CAAV,EAAa;MAC3BR,cAAc,CAAES,SAAD,IAAe,CAC5B,GAAGA,SADyB,EAE5B;QAACC,EAAE,EAACb,MAAM,CAACc,MAAX;QAAmBC,GAAG,EAACJ,CAAC,CAACK,MAAF,CAASC;MAAhC,CAF4B,CAAhB,CAAd;MAIAhB,QAAQ,CAACH,QAAQ,CAACa,CAAC,CAACK,MAAF,CAASC,MAAV,CAAT,CAAR;IACD,CAND;;IAOAT,MAAM,CAACU,aAAP,CAAqBb,IAAI,CAAC,CAAD,CAAzB;IACA,OAAOA,IAAI,CAAC,CAAD,CAAX;EACD,CAZD,CAP+B,CAoBjC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACI,oBACE,QAAC,GAAD;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,QAAD;MAAU,MAAM,EAAID,MAApB;MAA4B,MAAM,EAAE,SAApC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAML;;GAvCuBL,Q;UACPT,W,EAEED,W;;;KAHKU,Q"},"metadata":{},"sourceType":"module"}