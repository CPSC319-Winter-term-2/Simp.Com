{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchAPI } from \"../api/client\";\nimport { quinn } from \"../utils/mockFetch\";\nexport const getProducts = createAsyncThunk('/products/get', async function () {\n  return fetchAPI('GET', {}, {}, 'products/seller').then(response => response.json());\n});\nconst sellerSlice = createSlice({\n  name: \"seller\",\n  initialState: {\n    firstName: quinn.firstName,\n    lastName: quinn.lastName,\n    address: quinn.address,\n    email: quinn.email,\n    phone: quinn.phone,\n    compangName: quinn.compangName,\n    // Seller inventory\n    inventory: [],\n    inventoryStatus: \"idle\"\n  },\n  extraReducers: builder => {\n    builder.addCase(getProducts.fulfilled, function (state, action) {\n      state.inventory = action.payload;\n      state.inventoryStatus = 'succeed';\n    }).addCase(getProducts.rejected, function (state, action) {\n      console.log(action);\n    });\n  }\n});\nexport const {\n  addProduct\n} = sellerSlice.actions; // ------------------ Getters ------------------- //\n\nexport const getFirstName = state => state.seller.firstName;\nexport const getLastName = state => state.seller.lastName;\nexport const getAddress = state => state.seller.address;\nexport const getEmail = state => state.seller.email;\nexport const getPhone = state => state.seller.phone;\nexport const getCompanyName = state => state.seller.compangName;\nexport const getProductList = state => state.seller.inventory;\nexport const getProductListStatus = state => state.seller.inventoryStatus;\nexport default sellerSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchAPI","quinn","getProducts","then","response","json","sellerSlice","name","initialState","firstName","lastName","address","email","phone","compangName","inventory","inventoryStatus","extraReducers","builder","addCase","fulfilled","state","action","payload","rejected","console","log","addProduct","actions","getFirstName","seller","getLastName","getAddress","getEmail","getPhone","getCompanyName","getProductList","getProductListStatus","reducer"],"sources":["/Users/isabella/Documents/CPSC/Simp.Com/frontend/src/controller/sellerSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchAPI } from \"../api/client\";\nimport { quinn } from \"../utils/mockFetch\";\n\nexport const getProducts = createAsyncThunk('/products/get', async function() {\n  return fetchAPI('GET', {}, {}, 'products/seller').then(response => response.json());\n});\n\nconst sellerSlice = createSlice({\n  name: \"seller\",\n  initialState: {\n    firstName: quinn.firstName,\n    lastName: quinn.lastName,\n    address: quinn.address,\n    email: quinn.email,\n    phone: quinn.phone,\n    compangName: quinn.compangName,\n\n    // Seller inventory\n    inventory: [\n    ],\n    inventoryStatus: \"idle\",\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getProducts.fulfilled, function(state, action) {\n      state.inventory = action.payload;\n      state.inventoryStatus = 'succeed';\n    })\n    .addCase(getProducts.rejected, function(state, action) {\n      console.log(action);\n    })\n  }\n});\n\nexport const {addProduct} = sellerSlice.actions;\n\n// ------------------ Getters ------------------- //\nexport const getFirstName = (state) => state.seller.firstName;\nexport const getLastName = (state) => state.seller.lastName;\nexport const getAddress = (state) => state.seller.address;\nexport const getEmail = (state) => state.seller.email;\nexport const getPhone = (state) => state.seller.phone;\nexport const getCompanyName = (state) => state.seller.compangName;\n\nexport const getProductList = (state) => state.seller.inventory;\nexport const getProductListStatus = (state) => state.seller.inventoryStatus;\nexport default sellerSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,KAAT,QAAsB,oBAAtB;AAEA,OAAO,MAAMC,WAAW,GAAGJ,gBAAgB,CAAC,eAAD,EAAkB,kBAAiB;EAC5E,OAAOE,QAAQ,CAAC,KAAD,EAAQ,EAAR,EAAY,EAAZ,EAAgB,iBAAhB,CAAR,CAA2CG,IAA3C,CAAgDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA5D,CAAP;AACD,CAF0C,CAApC;AAIP,MAAMC,WAAW,GAAGP,WAAW,CAAC;EAC9BQ,IAAI,EAAE,QADwB;EAE9BC,YAAY,EAAE;IACZC,SAAS,EAAER,KAAK,CAACQ,SADL;IAEZC,QAAQ,EAAET,KAAK,CAACS,QAFJ;IAGZC,OAAO,EAAEV,KAAK,CAACU,OAHH;IAIZC,KAAK,EAAEX,KAAK,CAACW,KAJD;IAKZC,KAAK,EAAEZ,KAAK,CAACY,KALD;IAMZC,WAAW,EAAEb,KAAK,CAACa,WANP;IAQZ;IACAC,SAAS,EAAE,EATC;IAWZC,eAAe,EAAE;EAXL,CAFgB;EAe9BC,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CAACC,OAAR,CAAgBjB,WAAW,CAACkB,SAA5B,EAAuC,UAASC,KAAT,EAAgBC,MAAhB,EAAwB;MAC7DD,KAAK,CAACN,SAAN,GAAkBO,MAAM,CAACC,OAAzB;MACAF,KAAK,CAACL,eAAN,GAAwB,SAAxB;IACD,CAHD,EAICG,OAJD,CAISjB,WAAW,CAACsB,QAJrB,EAI+B,UAASH,KAAT,EAAgBC,MAAhB,EAAwB;MACrDG,OAAO,CAACC,GAAR,CAAYJ,MAAZ;IACD,CAND;EAOD;AAvB6B,CAAD,CAA/B;AA0BA,OAAO,MAAM;EAACK;AAAD,IAAerB,WAAW,CAACsB,OAAjC,C,CAEP;;AACA,OAAO,MAAMC,YAAY,GAAIR,KAAD,IAAWA,KAAK,CAACS,MAAN,CAAarB,SAA7C;AACP,OAAO,MAAMsB,WAAW,GAAIV,KAAD,IAAWA,KAAK,CAACS,MAAN,CAAapB,QAA5C;AACP,OAAO,MAAMsB,UAAU,GAAIX,KAAD,IAAWA,KAAK,CAACS,MAAN,CAAanB,OAA3C;AACP,OAAO,MAAMsB,QAAQ,GAAIZ,KAAD,IAAWA,KAAK,CAACS,MAAN,CAAalB,KAAzC;AACP,OAAO,MAAMsB,QAAQ,GAAIb,KAAD,IAAWA,KAAK,CAACS,MAAN,CAAajB,KAAzC;AACP,OAAO,MAAMsB,cAAc,GAAId,KAAD,IAAWA,KAAK,CAACS,MAAN,CAAahB,WAA/C;AAEP,OAAO,MAAMsB,cAAc,GAAIf,KAAD,IAAWA,KAAK,CAACS,MAAN,CAAaf,SAA/C;AACP,OAAO,MAAMsB,oBAAoB,GAAIhB,KAAD,IAAWA,KAAK,CAACS,MAAN,CAAad,eAArD;AACP,eAAeV,WAAW,CAACgC,OAA3B"},"metadata":{},"sourceType":"module"}