{"ast":null,"code":"var _jsxFileName = \"/Users/isabella/Documents/CPSC/Simp.Com/frontend/src/component/chat/SellerSearch.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Box } from \"@mui/system\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { TextField } from \"@mui/material\";\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\nimport MarkUnreadChatAltIcon from \"@mui/icons-material/MarkUnreadChatAlt\";\nimport ChatIcon from \"@mui/icons-material/Chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"https://dogecom.herokuapp.com\");\n\nfunction SellerSearch(prop) {\n  _s();\n\n  socket.emit(\"join_room\", prop.self.email);\n  const [open, setOpen] = React.useState(false); // const theme = useTheme();\n  // const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const handleClose = () => {\n    setOpen(false); // socket.disconnect();\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true); // socket.connect();\n\n    setMsgUnread(false);\n  };\n\n  const [message, setMessage] = useState(\"\");\n  const [MsgUnread, setMsgUnread] = useState(false);\n  const [messageReceived, setMessageReceived] = useState([]);\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"receive_message\", data => {\n      let tempEle = {\n        user: data.userName,\n        message: data.message\n      };\n      setMessageReceived(oldArray => [...oldArray, tempEle]);\n      setMsgUnread(true);\n    });\n  }, []);\n\n  const handleSent = () => {\n    if (message !== \"\") {\n      socket.emit(\"send_message\", {\n        room: prop.self.email,\n        user: prop.self.firstName,\n        message\n      });\n      let tempEle = {\n        user: prop.self.firstName,\n        message: message\n      };\n      setMessageReceived(oldArray => [...oldArray, tempEle]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!MsgUnread && /*#__PURE__*/_jsxDEV(ChatIcon, {\n      sx: {\n        fontSize: 39,\n        color: \"black\",\n        marginRight: \"1vw\"\n      },\n      onClick: handleClickOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), MsgUnread && /*#__PURE__*/_jsxDEV(MarkUnreadChatAltIcon, {\n      sx: {\n        fontSize: 39,\n        color: \"black\",\n        marginRight: \"1vw\"\n      },\n      onClick: handleClickOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Dialog // fullScreen={fullScreen}\n      , {\n        maxWidth: \"md\",\n        open: open,\n        onClose: handleClose,\n        \"aria-labelledby\": \"responsive-dialog-title\",\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          id: \"responsive-dialog-title\",\n          children: \"Chat \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: messageReceived.map(i => {\n            if (i.user === prop.self.firstName) {\n              return /*#__PURE__*/_jsxDEV(DialogContentText, {\n                sx: {\n                  textAlign: \"left\"\n                },\n                children: [i.user, \" : \", i.message]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(DialogContentText, {\n                sx: {\n                  textAlign: \"right\"\n                },\n                children: [i.user, \" : \", i.message]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this);\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            variant: \"standard\",\n            onChange: e => {\n              setMessage(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            autoFocus: true,\n            onClick: handleSent,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            autoFocus: true,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SellerSearch, \"7nQxNWPvba5dka3kjALk+V5ofUs=\");\n\n_c = SellerSearch;\nexport default SellerSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellerSearch\");","map":{"version":3,"names":["React","Box","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","TextField","io","useEffect","useState","MarkUnreadChatAltIcon","ChatIcon","socket","connect","SellerSearch","prop","emit","self","email","open","setOpen","handleClose","handleClickOpen","setMsgUnread","message","setMessage","MsgUnread","messageReceived","setMessageReceived","on","data","tempEle","user","userName","oldArray","handleSent","room","firstName","fontSize","color","marginRight","map","i","textAlign","e","target","value"],"sources":["/Users/isabella/Documents/CPSC/Simp.Com/frontend/src/component/chat/SellerSearch.js"],"sourcesContent":["import React from \"react\";\nimport { Box } from \"@mui/system\";\nimport Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport useMediaQuery from \"@mui/material/useMediaQuery\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { TextField } from \"@mui/material\";\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\nimport MarkUnreadChatAltIcon from \"@mui/icons-material/MarkUnreadChatAlt\";\nimport ChatIcon from \"@mui/icons-material/Chat\";\nconst socket = io.connect(\"https://dogecom.herokuapp.com\");\nfunction SellerSearch(prop) {\n  socket.emit(\"join_room\", prop.self.email);\n  const [open, setOpen] = React.useState(false);\n\n  // const theme = useTheme();\n  // const fullScreen = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const handleClose = () => {\n    setOpen(false);\n    // socket.disconnect();\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n    // socket.connect();\n    setMsgUnread(false);\n  };\n\n  const [message, setMessage] = useState(\"\");\n  const [MsgUnread, setMsgUnread] = useState(false);\n  const [messageReceived, setMessageReceived] = useState([]);\n\n  useEffect(() => {\n    socket.connect();\n    socket.on(\"receive_message\", (data) => {\n      let tempEle = {\n        user: data.userName,\n        message: data.message,\n      };\n      setMessageReceived((oldArray) => [...oldArray, tempEle]);\n      setMsgUnread(true);\n    });\n  }, []);\n\n  const handleSent = () => {\n    if (message !== \"\") {\n      socket.emit(\"send_message\", {\n        room: prop.self.email,\n        user: prop.self.firstName,\n        message,\n      });\n      let tempEle = {\n        user: prop.self.firstName,\n        message: message,\n      };\n      setMessageReceived((oldArray) => [...oldArray, tempEle]);\n    }\n  };\n\n  return (\n    <>\n      {!MsgUnread && (\n        <ChatIcon\n          sx={{ fontSize: 39, color: \"black\", marginRight: \"1vw\" }}\n          onClick={handleClickOpen}\n        />\n      )}\n      {MsgUnread && (\n        <MarkUnreadChatAltIcon\n          sx={{ fontSize: 39, color: \"black\", marginRight: \"1vw\" }}\n          onClick={handleClickOpen}\n        />\n      )}\n\n      <Box>\n        <Dialog\n          // fullScreen={fullScreen}\n          maxWidth=\"md\"\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"responsive-dialog-title\"\n        >\n          <DialogTitle id=\"responsive-dialog-title\">{\"Chat \"}</DialogTitle>\n          <DialogContent>\n            {messageReceived.map((i) => {\n              if (i.user === prop.self.firstName) {\n                return (\n                  <DialogContentText sx={{ textAlign: \"left\" }}>\n                    {i.user} : {i.message}\n                  </DialogContentText>\n                );\n              } else {\n                return (\n                  <DialogContentText sx={{ textAlign: \"right\" }}>\n                    {i.user} : {i.message}\n                  </DialogContentText>\n                );\n              }\n            })}\n          </DialogContent>\n          <DialogActions>\n            <TextField\n              fullWidth\n              variant=\"standard\"\n              onChange={(e) => {\n                setMessage(e.target.value);\n              }}\n            />\n            <Button autoFocus onClick={handleSent}>\n              Send\n            </Button>\n            <Button onClick={handleClose} autoFocus>\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Box>\n    </>\n  );\n}\n\nexport default SellerSearch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}