{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { REQUEST_STATE } from './utils';\nimport { submitOrderAsync } from '../component/cart/cartThunks';\nconst INITIAL_STATE = {\n  cart: [{\n    id: \"8888\",\n    name: \"egg\",\n    soldBy: \"1234\",\n    price: 0,\n    quantity: 1\n  }, {\n    id: \"9999\",\n    name: \"sandwitch\",\n    soldBy: \"1111\",\n    price: 0,\n    quantity: 1\n  }],\n  sum: 0,\n  submitOrder: REQUEST_STATE.IDLE,\n  addProductToCart: REQUEST_STATE.IDLE\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: INITIAL_STATE,\n  reducers: {\n    updateQuantity(state, action) {\n      let newValue = parseInt(action.payload.quantity);\n\n      if (newValue >= 0) {\n        let productToChange = state.cart.find(p => p.id === action.payload.id);\n        let diff = newValue - productToChange.quantity;\n        state.cart = state.cart.filter(p => p.id !== action.payload.id);\n        productToChange.quantity = newValue;\n        state.sum += productToChange.price * diff;\n        state.cart.push(productToChange);\n        state.cart.sort((a, b) => a.name.localeCompare(b.name));\n      }\n    },\n\n    deleteProduct(state, action) {\n      let productToChange = state.cart.find(p => p.id === action.payload.id);\n      state.sum -= productToChange.price * productToChange.quantity;\n      state.cart = state.cart.filter(p => p.id !== action.payload.id);\n    },\n\n    addProduct(state, action) {\n      let product = state.cart.find(p => p.id === action.payload.uuid);\n\n      if (product !== undefined) {\n        const index = state.cart.indexOf(product);\n        ++state.cart[index].quantity;\n        state.sum += state.cart[index].price;\n      } else {\n        state.cart.push({\n          id: action.payload.uuid,\n          name: action.payload.name,\n          soldBy: action.payload.soldBy,\n          price: 0,\n          quantity: 1\n        });\n        state.sum += 0;\n      }\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(submitOrderAsync.pending, state => {\n      state.submitOrder = REQUEST_STATE.PENDING;\n      state.error = null;\n    }).addCase(submitOrderAsync.fulfilled, (state, action) => {\n      state.submitOrder = REQUEST_STATE.FULFILLED;\n      state.cart = [];\n    }).addCase(submitOrderAsync.rejected, (state, action) => {\n      state.submitOrder = REQUEST_STATE.REJECTED;\n      state.error = action.error;\n    });\n  }\n});\nexport const {\n  updateQuantity,\n  deleteProduct,\n  addProduct\n} = cartSlice.actions; // ------------------ Getters ------------------- // \n\nexport const getCart = state => state.cart.cart;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","REQUEST_STATE","submitOrderAsync","INITIAL_STATE","cart","id","name","soldBy","price","quantity","sum","submitOrder","IDLE","addProductToCart","cartSlice","initialState","reducers","updateQuantity","state","action","newValue","parseInt","payload","productToChange","find","p","diff","filter","push","sort","a","b","localeCompare","deleteProduct","addProduct","product","uuid","undefined","index","indexOf","extraReducers","builder","addCase","pending","PENDING","error","fulfilled","FULFILLED","rejected","REJECTED","actions","getCart","reducer"],"sources":["/Users/isabella/Documents/CPSC/Simp.Com/frontend/src/controller/cartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { REQUEST_STATE } from './utils';\nimport { submitOrderAsync} from '../component/cart/cartThunks';\n\nconst INITIAL_STATE = {\n  cart: [ \n    {\n      id: \"8888\",\n      name: \"egg\",\n      soldBy: \"1234\",\n      price: 0,\n      quantity: 1\n    }, \n    {\n      id:\"9999\",\n      name:\"sandwitch\",\n      soldBy:\"1111\",\n      price:0,\n      quantity:1\n    }\n],\n  sum: 0,\n  submitOrder: REQUEST_STATE.IDLE,\n  addProductToCart: REQUEST_STATE.IDLE\n}\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: INITIAL_STATE,\n  reducers: {\n    updateQuantity(state, action) {\n      let newValue = parseInt(action.payload.quantity);\n      if (newValue >= 0) {\n      let productToChange = state.cart.find(p => p.id === action.payload.id);\n      let diff = newValue- productToChange.quantity \n      state.cart = state.cart.filter(p => p.id !== action.payload.id);\n      productToChange.quantity= newValue;\n      state.sum += productToChange.price * diff;\n      state.cart.push(productToChange);\n      state.cart.sort((a,b) => a.name.localeCompare(b.name));\n      }\n    },\n    deleteProduct(state, action) {\n      let productToChange = state.cart.find(p => p.id === action.payload.id)\n      state.sum -= productToChange.price * productToChange.quantity\n      state.cart = state.cart.filter(p => p.id !== action.payload.id)\n    },\n    addProduct(state, action) {\n      let product = state.cart.find(p => p.id === action.payload.uuid);\n      if (product !== undefined) {\n        const index = state.cart.indexOf(product);\n        ++state.cart[index].quantity;\n        state.sum += state.cart[index].price;\n      } else {\n        state.cart.push({\n          id: action.payload.uuid,\n          name: action.payload.name,\n          soldBy: action.payload.soldBy,\n          price: 0,\n          quantity: 1});\n        state.sum += 0;\n      }\n    }\n  },\n  extraReducers: (builder) => {\n    builder \n    .addCase(submitOrderAsync.pending, (state) => {\n      state.submitOrder = REQUEST_STATE.PENDING;\n      state.error = null;\n    })\n    .addCase(submitOrderAsync.fulfilled, (state,action) => {\n      state.submitOrder = REQUEST_STATE.FULFILLED;\n      state.cart = [];\n    })\n    .addCase(submitOrderAsync.rejected, (state,action) => {\n      state.submitOrder = REQUEST_STATE.REJECTED;\n      state.error = action.error;\n    })\n\n}\n});\n\nexport const { updateQuantity, deleteProduct, addProduct } =\n  cartSlice.actions;\n\n// ------------------ Getters ------------------- // \nexport const getCart = (state) => state.cart.cart;\n\nexport default cartSlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}